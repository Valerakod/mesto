{"version":3,"file":"main.js","mappings":"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","sources":["webpack://praktikum/./src/components/Card.js","webpack://praktikum/./src/components/FormValidator.js","webpack://praktikum/./src/components/Section.js","webpack://praktikum/./src/components/Popup.js","webpack://praktikum/./src/components/PopupWithImage.js","webpack://praktikum/./src/components/PopupWithForm.js","webpack://praktikum/./src/components/UserInfo.js","webpack://praktikum/./src/components/PopupWithConfirm.js","webpack://praktikum/./src/pages/index.js","webpack://praktikum/./src/utils/constants.js","webpack://praktikum/./src/components/Api.js"],"sourcesContent":["export default class Card {\n  constructor({data, handleCardClick, handleCardDelSubmit, handleLikeCard, currentUserId}, templateSelector) {\n    this._name = data.name;\n    this._link = data.link;\n    this._templateSelector = templateSelector;\n    this._handleCardClick = handleCardClick;\n    this._handleCardDelSubmit = handleCardDelSubmit;\n    //this.likesCounter = this._element.querySelector(\".element__heart-count\");\n    this._handleLikeCard = handleLikeCard;\n    this.isLiked = false;\n    this._likes = data.likes;\n    this._cardId = data._id;\n    this._ownerId = data.owner._id;\n    this._currentUserId = currentUserId;\n    this.deleteCard = this.deleteCard.bind(this);\n  };\n\n  _getTemplate() {\n    const elementTemplate = document.querySelector(this._templateSelector);\n    const cardElement = elementTemplate.content.firstElementChild.cloneNode(true);\n    return cardElement;\n  };\n\n  generateCard() {\n    this._element = this._getTemplate();\n    this._cardElementImage = this._element.querySelector(\".element__image\");\n    this._cardElementTitle = this._element.querySelector(\".element__text\");\n    this.likeButton = this._element.querySelector(\".element__heart\");\n    this.likesCounter = this._element.querySelector(\".element__heart-count\");\n    this.likesCounter.textContent = this._likes.length;\n    this._cardElementImage.setAttribute(\"src\", this._link);\n    this._cardElementImage.setAttribute(\"alt\", this._name);\n    this._cardElementTitle.textContent = this._name;\n\n\n    this._setEventListners();\n    return this._element;\n  };\n\n  //удаление карточки\n  deleteCard = () => {\n    this._element.remove();\n    this._element = null;\n  };\n\n\n  //  метод, который принимает обновленный массив лайков в аргументе, обновляет счетчик и перекрашивает кнопку\n  updateLikes(data) {\n    this._likes = data.likes;\n    console.log(data)\n      this.likesCounter.textContent = this._likes.length;\n      if  (this._likes.find((data) => data._id === this._currentUserId)) {\n        this.likeButton.classList.add(\"element__heart_active\");\n      } else {\n        this.likeButton.classList.remove(\"element__heart_active\");\n      }\n  }\n\n\n   //проверяем, есть ли текущий пользователь среди лайкнувших\n   hasCurrentUserLike() {\n    return !!this._likes.find((like) => like._id === this._currentUserId)\n   }\n\n  _setEventListners() {\n    this._deleteButton = this._element.querySelector(\".element__delete-icon\");\n        this._deleteButton.addEventListener(\"click\", () => {\n            this._handleCardDelSubmit(this);\n        });\n        if (this._currentUserId !== this._ownerId) {\n            this._deleteButton.remove()\n        }\n       this.likeButton.addEventListener(\"click\", () => {\n        this._handleLikeCard(this)\n    });\n\n    this._cardElementImage.addEventListener(\"click\", () => this._handleCardClick(this._name, this._link));\n  };\n}\n","export default class FormValidator {\n  constructor(selectors, formElement) {\n    this._selectors = selectors;\n    this._submitButton = formElement.querySelector(\n      selectors.submitButtonSelector\n    );\n    this._formElement = formElement;\n    this._inputList = Array.from(\n      this._formElement.querySelectorAll(this._selectors.inputSelector)\n    );\n  }\n  // Функция, которая добавляет класс с ошибкой\n  _showInputError(inputElement, errorMessage) {\n    const errorElement = this._formElement.querySelector(\n      `.${inputElement.id}-error`\n    );\n    inputElement.classList.add(this._selectors.inputErrorClass);\n    errorElement.classList.add(this._selectors.errorClass);\n    errorElement.textContent = errorMessage;\n  }\n\n  // Функция, которая удаляет класс с ошибкой\n  _hideInputError(inputElement) {\n    const errorElement = this._formElement.querySelector(\n      `.${inputElement.id}-error`\n    );\n    inputElement.classList.remove(this._selectors.inputErrorClass);\n    errorElement.classList.remove(this._selectors.errorClass);\n    errorElement.textContent = \" \";\n  }\n\n  // Функция, которая проверяет валидность поля\n  _checkInputValidity(inputElement) {\n    if (!inputElement.validity.valid) {\n      // Если поле не проходит валидацию, покажем ошибку\n      this._showInputError(inputElement, inputElement.validationMessage);\n    } else {\n      // Если проходит, скроем\n      this._hideInputError(inputElement);\n    }\n  }\n\n  //проверяем поля ввода на корректность\n  _hasInvalidInput() {\n    return this._inputList.some((input) => !input.validity.valid);\n  }\n\n  //функция изменения состояния кнопки\n  _toggleButtonState() {\n    if (this._hasInvalidInput()) {\n      this._submitButton.classList.add(this._selectors.inactiveButtonClass);\n      this._submitButton.setAttribute(\"disabled\", true);\n    } else {\n      this._submitButton.classList.remove(this._selectors.inactiveButtonClass);\n      this._submitButton.removeAttribute(\"disabled\");\n    }\n  }\n\n  //функция добавляет обработчики сразу всем полям формы\n  _setEventListeners() {\n    this._toggleButtonState();\n    this._inputList.forEach((inputElement) => {\n      inputElement.addEventListener(\"input\", () => {\n        this._checkInputValidity(inputElement);\n        this._toggleButtonState();\n      });\n    });\n  }\n\n  //находим и перебираем все формы на странице\n  enableValidation() {\n    this._setEventListeners();\n  }\n\n  //Функция сброса ошибок\n  restartFormValidation() {\n    this._toggleButtonState(this._inputList);\n\n    this._inputList.forEach((inputElement) => {\n      this._hideInputError(inputElement);\n    });\n  }\n}\n","export default class Section {\n  constructor({ renderer }, containerSelector) {\n\n    this._renderer = renderer;\n    this._container = document.querySelector(containerSelector)\n  };\n\n\n  setItemAppend(element) {\n    this._container.append(element);\n  }\n\n  renderItems(items) {\n\n    items.forEach(element => {\n      this._renderer(element)\n    })\n  };\n\n  addItem(element) {\n    this._container.prepend(element);\n  };\n}\n","export default class Popup {\n  constructor(popupSelector) {\n    this._popupSelector = popupSelector;\n    this._popupElement = document.querySelector(popupSelector);\n    this._handleEscClose = this._handleEscClose.bind(this);\n    this._closePopupClickOverlay = this._closePopupClickOverlay.bind(this);\n  }\n\n  //открытие попапа\n  open() {\n    document.addEventListener(\"keydown\", this._handleEscClose);\n    this._popupElement.classList.add(\"popup_opened\");\n  }\n\n  //закрытие попапа\n  close() {\n    this._popupElement.classList.remove(\"popup_opened\");\n    document.removeEventListener(\"keydown\", this._handleEscClose);\n  }\n\n  //закрытие попапа кликом на ESC\n  _handleEscClose(evt) {\n    if (evt.key === \"Escape\") {\n      this.close();\n    }\n  }\n\n  //закрытие попапа кликом на оверлей\n  _closePopupClickOverlay(e) {\n    if (e.target === e.currentTarget) {\n      this.close();\n    }\n  }\n\n  setEventListeners() {\n    const popupCloseButton = this._popupElement.querySelector(\".popup__close-button\");\n    this._popupElement.addEventListener(\"mousedown\", this._closePopupClickOverlay);\n    popupCloseButton.addEventListener(\"click\", () => {\n      this.close()\n    })\n\n  }\n\n}\n","import Popup from \"./Popup.js\";\n\nexport default class PopupWithImage extends Popup {\n  constructor(popupSelector) {\n    super(popupSelector);\n    this._image = this._popupElement.querySelector(\".popup__element-image\");\n    this._imageText = this._popupElement.querySelector(\".popup__element-text\");\n  }\n\n  open(name, link) {\n    super.open();\n    this._image.src = link;\n    this._image.alt = name;\n    this._imageText.textContent = name;\n  }\n}\n","import Popup from \"./Popup.js\";\n\nexport default class PopupWithForm extends Popup {\n  constructor(popupSelector, {handleFormSubmit }) {\n    super(popupSelector);\n    this._handleFormSubmit = handleFormSubmit;\n    this._inputList = this._popupElement.querySelectorAll(\".popup__input\");\n    this._formElement = this._popupElement.querySelector(\".popup__form\");\n    this._saveButtonText = this._popupElement.querySelector(\".popup__save-button\").textContent;\n    this._saveButton = this._formElement.querySelector(\".popup__save-button\")\n  }\n\n  //метод собирает данные всех полей формы\n  _getInputValues() {\n    //создаем пустой объект\n    this._formValues = {};\n    //добавляем в этот объект значения всех полей\n    this._inputList.forEach(input => {\n      this._formValues[input.name] = input.value;\n    });\n    //возвращаем объект значений\n    return this._formValues;\n  }\n\n  setEventListeners() {\n    super.setEventListeners();\n    this._formElement.addEventListener(\"submit\", (evt) => {\n      evt.preventDefault();\n      this._handleFormSubmit(this._getInputValues());\n    })\n  }\n\n  close() {\n    super.close();\n    this._formElement.reset();\n  }\n\n  isLoading(loading) {\n    if (loading) {\n        this._saveButton.textContent = \"Сохранение...\"\n    } else {\n        this._saveButton.textContent = this._saveButtonText\n    }\n}\n}\n","export default class UserInfo {\n  constructor({ userName, userAbout, userAvatar }) {\n    this._name = userName;\n    this._about = userAbout;\n    this._avatar = userAvatar\n  }\n\n  getUserInfo() {\n    return {\n      name: this._name.textContent,\n      about: this._about.textContent,\n      avatar: this._avatar.src\n    }\n  }\n\n  setUserInfo({ name, about, avatar }) {\n    if (name) {\n      this._name.textContent = name\n    }\n    if (about) {\n      this._about.textContent = about\n    }\n    if (avatar) {\n      this._avatar.src = avatar\n    }\n\n  }\n}\n","import Popup from \"./Popup.js\";\n\nexport default class PopupWithConfirm extends Popup {\n  setSubmitAction(action) {\n    this._handleCardDelSubmit = action;\n  }\n\n  setEventListeners(){\n  this._popupElement.addEventListener(\"submit\", (evt) => {\n    evt.preventDefault();\n    this._handleCardDelSubmit();\n  })\n    super.setEventListeners();\n\n  }\n}\n","import \"./index.css\"\nimport Card from \"../components/Card.js\";\nimport FormValidator from \"../components/FormValidator.js\";\nimport Section from \"../components/Section.js\";\nimport PopupWithImage from \"../components/PopupWithImage.js\";\nimport PopupWithForm from \"../components/PopupWithForm.js\";\nimport UserInfo from \"../components/UserInfo.js\";\nimport PopupWithConfirm from \"../components/PopupWithConfirm\";\nimport {\n  selectors,\n  editButton,\n  formElementAdd,\n  nameInput,\n  jobInput,\n  profileName,\n  profileJob,\n  profileAvatar,\n  addButton,\n  deleteElement,\n  //popupDeleteConfirmation,\n  profileAvatarEditButton,\n} from \"../utils/constants.js\";\nimport Api from \"../components/Api.js\";\n\nlet userId\nconst api = new Api({\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-63\",\n  headers: {\n    authorization: \"5fcf59d4-83ea-4773-9206-282bfebd1adc\",\n    'Content-Type': \"application/json\"\n  }\n});\n\n//инициализация userinfo\nconst userInfo = new UserInfo({\n  userName: profileName,\n  userAbout: profileJob,\n  userAvatar: profileAvatar\n}\n)\n\n//открытие картинки\nconst popupOpenImage = new PopupWithImage(\".popup-img\");\n\n  popupOpenImage.setEventListeners();\n\n\n//попап удаления карточки\nconst removeCardConfirm = new PopupWithConfirm(\".popup_element_delete-card\");\nremoveCardConfirm.setEventListeners();\n\n\n//функция создания новых карточек, удаление и рабочий лайк\nfunction createCard(data, templateSelector) {\n  const card = new Card({\n    data,\n    handleCardClick: () => {\n      popupOpenImage.open(data.name, data.link);\n    },\n    handleLikeCard: (card) => {\n    if (card.hasCurrentUserLike()) {\n      api.deleteLike(card._cardId)\n        .then((data) => {\n        card.updateLikes(data);\n      });\n    } else {\n      api.addLike(card._cardId)\n      .then((data) => {\n        card.updateLikes(data);\n      })}},\n    handleCardDelSubmit: (card) => {\n        removeCardConfirm.open();\n        console.log(card);\n        removeCardConfirm.setSubmitAction(() => {\n          api.deleteCard(card._cardId)\n          .then(() => {\n            card.deleteCard();\n            removeCardConfirm.close();\n          });\n        })\n        .catch((err) => console.log(`Error with createCard handleCardDelSubmit` + err))\n      },\n      currentUserId: userId\n    }, templateSelector);\n\n\n  const cardElement = card.generateCard();\n  return cardElement;\n  }\n\n//инициализируем класс, ответственный за добавление формы на страницу\nconst cardList = new Section(\n  {\n\n    renderer: (data) => cardList.setItemAppend(createCard(data, \"#card\"))\n  },\n  \".elements\"\n);\n\n\n//добавление карточки в контейнер\nconst newCard = new PopupWithForm(\".popup-add\", {\n  handleFormSubmit: (data) => {\n    newCard.isLoading(true);\n    api.addCard({\n      title: data.title,\n      link: data.link\n  })\n  .then((data) => {\n    cardList.addItem(createCard(data, \"#card\"));\n\n  newCard.close();\n  formElementAdd.reset();\n})\n.catch((err) => console.log(`Error with newCard` + err))\n.finally(() => {\n  newCard.isLoading(false)\n})\n}\n});\nnewCard.setEventListeners();\n\n\n//обработчик события при добавлении карточки\naddButton.addEventListener(\"click\", () => {\n  formAddCardValidator.restartFormValidation();\n  newCard.open();\n});\n\n//форма редактирования профиля\nconst newProfile = new PopupWithForm(\".popup-edit\", {\n  handleFormSubmit: (data) => {\n    newProfile.isLoading(true);\n\n    api.editProfileInfo(\n      data[\"popup-text-check-name\"],\n      data[\"popup-text-check-job\"]\n  )\n    .then((data) => {\n      userInfo.setUserInfo({\n\n          name: data.name,\n          about: data.about\n      });\n      newProfile.isLoading(false);\n      newProfile.close();\n  })\n  .catch((err) => console.log(`Error with newProfile` + err))\n}\n});\nnewProfile.setEventListeners();\n\n\n\n//обработчик события при редактировании профиля\neditButton.addEventListener(\"click\", () => {\n  formEditProfileValidator.restartFormValidation();\n  const { name, about } = userInfo.getUserInfo();\n  nameInput.value = name\n  jobInput.value = about\n  newProfile.open();\n});\n\n//форма редактирования аватара\nconst popupEditAvatar = new PopupWithForm(\".popup_avatar\", {\n  handleFormSubmit: (info) => {\n      popupEditAvatar.isLoading(true);\n      api.setAvatar({\n          avatar: info.avatar\n      })\n          .then((data) => {\n              userInfo.setUserInfo({\n                  name: data.name,\n                  about: data.about,\n                  avatar: data.avatar\n              });\n              popupEditAvatar.close();\n          })\n          .catch((err) => console.log(`Error with popupEditAvatar` + err));\n  }\n});\n\n//обработчик события при редактировании аватара\nprofileAvatarEditButton.addEventListener(\"click\", () => {\n  popupEditAvatarFormValidator.restartFormValidation();\n  popupEditAvatar.open();\n});\n\npopupEditAvatar.setEventListeners();\n\n\nconst cardsData = api.getInitialCards();\nconst getUserData = api.getUserInfo();\n\nPromise.all([cardsData, getUserData])\n    .then(([data, user]) => {\n\n        userInfo.setUserInfo({\n            name: user.name,\n            about: user.about,\n            avatar: user.avatar\n        });\n\n        userId = user._id;\n\n        cardList.renderItems(data);\n    })\n    .catch((err) => console.log(`Error with promises...` + err));\n\n\n\n//для каждой формы включаю экземпляр валидатора и включаю валидацию.\nconst formEditProfile = document.querySelector(\".popup-edit\");\nconst formEditProfileValidator = new FormValidator(selectors, formEditProfile);\nformEditProfileValidator.enableValidation();\n\nconst formAddCard = document.querySelector(\".popup-add\");\nconst formAddCardValidator = new FormValidator(selectors, formAddCard);\nformAddCardValidator.enableValidation();\n\nconst popupEditAvatarForm = document.querySelector(\".popup_avatar\");\nconst popupEditAvatarFormValidator = new FormValidator(selectors, popupEditAvatarForm);\npopupEditAvatarFormValidator.enableValidation();\n\n","//вызов валидации\nexport const selectors = {\n  formSelector: \".popup__form\",\n  inputSelector: \".popup__input\",\n  submitButtonSelector: \".popup__save-button\",\n  inactiveButtonClass: \"popup__save-button_inactive\",\n  inputErrorClass: \"popup__input_type_error\",\n  errorClass: \"popup__input-error_active\"\n}\n\n//кнопки, формы, инпуты\nexport const editButton = document.querySelector(\".profile__edit-button\");\nexport const formElementEdit = document.querySelector(\".popup__form_profile\");\nexport const formElementAdd = document.querySelector(\".popup__form_add\");\nexport const nameInput = document.querySelector(\".popup-text-check-name\");\nexport const jobInput = document.querySelector(\".popup-text-check-job\");\nexport const profileName = document.querySelector(\".profile__name\");\nexport const profileJob = document.querySelector(\".profile__job\");\nexport const profileAvatar = document.querySelector(\".profile__avatar-img\")\nexport const addButton = document.querySelector(\".profile__add-button\");\nexport const profileAvatarEditButton = document.querySelector(\".profile__avatar\");\nexport const deleteElement = document.querySelector(\".element__delete-icon\");\nexport const popupDeleteConfirmation = document.querySelector(\".popup_element_delete-card\");\n\n","export default class Api {\n    constructor(options) {\n        this._baseUrl = options.baseUrl;\n        this._headers = options.headers;\n    }\n\n    returnResultStatus(res) {\n        if (res.ok) {\n            return res.json();\n        }\n        return Promise.reject(`Что-то пошло не так: ${res.status} : ${res.statusText}`);\n    }\n\n    getUserInfo() {\n        return fetch(this._baseUrl + '/users/me', {\n            method: 'GET',\n            headers: this._headers})\n            .then(this.returnResultStatus)\n    }\n\n    getInitialCards() {\n        return fetch(this._baseUrl + '/cards', {headers: this._headers})\n            .then(this.returnResultStatus)\n    }\n\n    editProfileInfo(name, about) {\n        return fetch(\n            this._baseUrl + '/users/me',\n            {\n                method: 'PATCH',\n                headers: this._headers,\n                body: JSON.stringify({\n                    name: name,\n                    about: about\n                })\n            }\n        )\n            .then(this.returnResultStatus)\n    }\n\n    addCard({title, link}) {\n        return fetch(\n            this._baseUrl + '/cards',\n            {\n                method: 'POST',\n                headers: this._headers,\n                body: JSON.stringify({\n                    name: title,\n                    link: link\n                })\n            }\n        )\n            .then(this.returnResultStatus)\n    }\n\n    deleteCard(cardId) {\n        console.log(cardId)\n        return fetch(\n            this._baseUrl + `/cards/${cardId}`,\n            {\n                method: 'DELETE',\n                headers: this._headers\n            })\n            .then(this.returnResultStatus)\n    }\n\n    addLike(cardId) {\n        return fetch(\n            this._baseUrl + `/cards/likes/${cardId}`,\n            {\n                method: 'PUT',\n                headers: this._headers\n            }\n        )\n            .then(this.returnResultStatus)\n    }\n\n    deleteLike(cardId) {\n        return fetch(\n            this._baseUrl + `/cards/likes/${cardId}`,\n            {\n                method: 'DELETE',\n                headers: this._headers\n            }\n        )\n            .then(this.returnResultStatus);\n    }\n\n    setAvatar({avatar}) {\n        return fetch(\n            this._baseUrl + '/users/me/avatar',\n            {\n                method: 'PATCH',\n                headers: this._headers,\n                body: JSON.stringify({\n                    avatar: avatar,\n                })\n            }\n        )\n            .then(this.returnResultStatus)\n    }\n}\n"],"names":["Card","templateSelector","data","handleCardClick","handleCardDelSubmit","handleLikeCard","currentUserId","_element","remove","this","_name","name","_link","link","_templateSelector","_handleCardClick","_handleCardDelSubmit","_handleLikeCard","isLiked","_likes","likes","_cardId","_id","_ownerId","owner","_currentUserId","deleteCard","bind","document","querySelector","content","firstElementChild","cloneNode","_getTemplate","_cardElementImage","_cardElementTitle","likeButton","likesCounter","textContent","length","setAttribute","_setEventListners","console","log","find","classList","add","like","_deleteButton","addEventListener","FormValidator","selectors","formElement","_selectors","_submitButton","submitButtonSelector","_formElement","_inputList","Array","from","querySelectorAll","inputSelector","inputElement","errorMessage","errorElement","id","inputErrorClass","errorClass","validity","valid","_hideInputError","_showInputError","validationMessage","some","input","_hasInvalidInput","inactiveButtonClass","removeAttribute","_toggleButtonState","forEach","_checkInputValidity","_setEventListeners","Section","containerSelector","renderer","_renderer","_container","element","append","items","prepend","Popup","popupSelector","_popupSelector","_popupElement","_handleEscClose","_closePopupClickOverlay","removeEventListener","evt","key","close","e","target","currentTarget","popupCloseButton","PopupWithImage","_image","_imageText","src","alt","PopupWithForm","handleFormSubmit","_handleFormSubmit","_saveButtonText","_saveButton","_formValues","value","preventDefault","_getInputValues","reset","loading","UserInfo","userName","userAbout","userAvatar","_about","_avatar","about","avatar","userId","PopupWithConfirm","action","formSelector","editButton","formElementAdd","nameInput","jobInput","profileName","profileJob","profileAvatar","addButton","profileAvatarEditButton","api","options","_baseUrl","baseUrl","_headers","headers","res","ok","json","Promise","reject","status","statusText","fetch","method","then","returnResultStatus","body","JSON","stringify","title","cardId","authorization","userInfo","popupOpenImage","setEventListeners","removeCardConfirm","createCard","card","open","hasCurrentUserLike","deleteLike","updateLikes","addLike","setSubmitAction","catch","err","generateCard","cardList","setItemAppend","newCard","isLoading","addCard","addItem","finally","formAddCardValidator","restartFormValidation","newProfile","editProfileInfo","setUserInfo","formEditProfileValidator","getUserInfo","popupEditAvatar","info","setAvatar","popupEditAvatarFormValidator","cardsData","getInitialCards","getUserData","all","user","renderItems","enableValidation"],"sourceRoot":""}