{"version":3,"file":"main.js","mappings":"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","sources":["webpack://praktikum/./src/components/Card.js","webpack://praktikum/./src/components/FormValidator.js","webpack://praktikum/./src/components/Section.js","webpack://praktikum/./src/components/Popup.js","webpack://praktikum/./src/components/PopupWithImage.js","webpack://praktikum/./src/components/PopupWithForm.js","webpack://praktikum/./src/components/UserInfo.js","webpack://praktikum/./src/components/PopupWithConfirm.js","webpack://praktikum/./src/pages/index.js","webpack://praktikum/./src/utils/constants.js","webpack://praktikum/./src/components/Api.js"],"sourcesContent":["export default class Card {\n  constructor({data, currentUserId, handleCardClick, handleCardDelSubmit, handleAddLike, handleDelLike}, templateSelector) {\n    this._name = data.name;\n    this._link = data.link;\n    this._templateSelector = templateSelector;\n    this._handleCardClick = handleCardClick;\n    this._handleCardDelSubmit = handleCardDelSubmit;\n    this._handleAddLike = handleAddLike;\n    this._handleDelLike = handleDelLike;\n    this.isLiked = false;\n    this._likes = data.likes;\n    this._cardId = data._id;\n    this._ownerId = data.owner._id;\n    this._currentUserId = currentUserId;\n    this.deleteCard = this.deleteCard.bind(this);\n  };\n\n  _getTemplate() {\n    const elementTemplate = document.querySelector(this._templateSelector);\n    const cardElement = elementTemplate.content.firstElementChild.cloneNode(true);\n    return cardElement;\n  };\n\n  generateCard() {\n    this._element = this._getTemplate();\n    this._cardElementImage = this._element.querySelector(\".element__image\");\n    this._cardElementTitle = this._element.querySelector(\".element__text\");\n    this.likeButton = this._element.querySelector(\".element__heart\");\n    this.likeCounter = this._element.querySelector(\".element__heart-count\")\n    this.likeCounter.textContent = this._likes.length;\n    this._cardElementImage.setAttribute(\"src\", this._link);\n    this._cardElementImage.setAttribute(\"alt\", this._name);\n    this._cardElementTitle.textContent = this._name;\n    this._likes.forEach(element => {\n      if (element._id === this._currentUserId) {\n          this.likeButton.classList.add(\"element__heart_active\");\n          this.isLiked = true\n      }\n  });\n\n    this._setEventListners();\n    return this._element;\n  };\n\n  //удаление карточки\n  deleteCard = () => {\n    this._element.remove();\n    this._element = null;\n  };\n\n  _setEventListners() {\n    this._deleteButton = this._element.querySelector(\".element__delete-icon\");\n        this._deleteButton.addEventListener(\"click\", () => {\n            this._handleCardDelSubmit(this);\n        });\n        if (this._currentUserId !== this._ownerId) {\n            this._deleteButton.remove()\n        }\n        this.likeButton.addEventListener(\"click\", () => {\n            if (this.isLiked) {\n                this._handleDelLike(this._cardId)\n            } else {\n                this._handleAddLike(this._cardId)\n            }\n        });\n\n    this._cardElementImage.addEventListener(\"click\", () => this._handleCardClick(this._name, this._link));\n  };\n}\n","export default class FormValidator {\n  constructor(selectors, formElement) {\n    this._selectors = selectors;\n    this._submitButton = formElement.querySelector(\n      selectors.submitButtonSelector\n    );\n    this._formElement = formElement;\n    this._inputList = Array.from(\n      this._formElement.querySelectorAll(this._selectors.inputSelector)\n    );\n  }\n  // Функция, которая добавляет класс с ошибкой\n  _showInputError(inputElement, errorMessage) {\n    const errorElement = this._formElement.querySelector(\n      `.${inputElement.id}-error`\n    );\n    inputElement.classList.add(this._selectors.inputErrorClass);\n    errorElement.classList.add(this._selectors.errorClass);\n    errorElement.textContent = errorMessage;\n  }\n\n  // Функция, которая удаляет класс с ошибкой\n  _hideInputError(inputElement) {\n    const errorElement = this._formElement.querySelector(\n      `.${inputElement.id}-error`\n    );\n    inputElement.classList.remove(this._selectors.inputErrorClass);\n    errorElement.classList.remove(this._selectors.errorClass);\n    errorElement.textContent = \" \";\n  }\n\n  // Функция, которая проверяет валидность поля\n  _checkInputValidity(inputElement) {\n    if (!inputElement.validity.valid) {\n      // Если поле не проходит валидацию, покажем ошибку\n      this._showInputError(inputElement, inputElement.validationMessage);\n    } else {\n      // Если проходит, скроем\n      this._hideInputError(inputElement);\n    }\n  }\n\n  //проверяем поля ввода на корректность\n  _hasInvalidInput() {\n    return this._inputList.some((input) => !input.validity.valid);\n  }\n\n  //функция изменения состояния кнопки\n  _toggleButtonState() {\n    if (this._hasInvalidInput()) {\n      this._submitButton.classList.add(this._selectors.inactiveButtonClass);\n      this._submitButton.setAttribute(\"disabled\", true);\n    } else {\n      this._submitButton.classList.remove(this._selectors.inactiveButtonClass);\n      this._submitButton.removeAttribute(\"disabled\");\n    }\n  }\n\n  //функция добавляет обработчики сразу всем полям формы\n  _setEventListeners() {\n    this._toggleButtonState();\n    this._inputList.forEach((inputElement) => {\n      inputElement.addEventListener(\"input\", () => {\n        this._checkInputValidity(inputElement);\n        this._toggleButtonState();\n      });\n    });\n  }\n\n  //находим и перебираем все формы на странице\n  enableValidation() {\n    this._setEventListeners();\n  }\n\n  //Функция сброса ошибок\n  restartFormValidation() {\n    this._toggleButtonState(this._inputList);\n\n    this._inputList.forEach((inputElement) => {\n      this._hideInputError(inputElement);\n    });\n  }\n}\n","export default class Section {\n  constructor({ renderer }, containerSelector) {\n\n    this._renderer = renderer;\n    this._container = document.querySelector(containerSelector)\n  };\n\n  renderItems(items) {\n    items.forEach(item => {\n      this._renderer(item)\n    })\n  };\n\n  addItem(element) {\n    this._container.prepend(element);\n  };\n}\n","export default class Popup {\n  constructor(popupSelector) {\n    this._popupSelector = popupSelector;\n    this._popupElement = document.querySelector(popupSelector);\n    this._handleEscClose = this._handleEscClose.bind(this);\n    this._closePopupClickOverlay = this._closePopupClickOverlay.bind(this);\n  }\n\n  //открытие попапа\n  open() {\n    document.addEventListener(\"keydown\", this._handleEscClose);\n    this._popupElement.classList.add(\"popup_opened\");\n  }\n\n  //закрытие попапа\n  close() {\n    this._popupElement.classList.remove(\"popup_opened\");\n    document.removeEventListener(\"keydown\", this._handleEscClose);\n  }\n\n  //закрытие попапа кликом на ESC\n  _handleEscClose(evt) {\n    if (evt.key === \"Escape\") {\n      this.close();\n    }\n  }\n\n  //закрытие попапа кликом на оверлей\n  _closePopupClickOverlay(e) {\n    if (e.target === e.currentTarget) {\n      this.close();\n    }\n  }\n\n  setEventListeners() {\n    const popupCloseButton = this._popupElement.querySelector(\".popup__close-button\");\n    this._popupElement.addEventListener(\"mousedown\", this._closePopupClickOverlay);\n    popupCloseButton.addEventListener(\"click\", () => {\n      this.close()\n    })\n\n  }\n\n}\n","import Popup from \"./Popup.js\";\n\nexport default class PopupWithImage extends Popup {\n  constructor(popupSelector) {\n    super(popupSelector);\n    this._image = this._popupElement.querySelector(\".popup__element-image\");\n    this._imageText = this._popupElement.querySelector(\".popup__element-text\");\n  }\n\n  open(name, link) {\n    super.open();\n    this._image.src = link;\n    this._image.alt = name;\n    this._imageText.textContent = name;\n  }\n}\n","import Popup from \"./Popup.js\";\n\nexport default class PopupWithForm extends Popup {\n  constructor(popupSelector, {handleFormSubmit }) {\n    super(popupSelector);\n    this._handleFormSubmit = handleFormSubmit;\n    this._inputList = this._popupElement.querySelectorAll(\".popup__input\");\n    this._formElement = this._popupElement.querySelector(\".popup__form\");\n    this._saveButtonText = this._popupElement.querySelector(\".popup__save-button\").textContent;\n  }\n\n  //метод собирает данные всех полей формы\n  _getInputValues() {\n    //создаем пустой объект\n    this._formValues = {};\n    //добавляем в этот объект значения всех полей\n    this._inputList.forEach(input => {\n      this._formValues[input.name] = input.value;\n    });\n    //возвращаем объект значений\n    return this._formValues;\n  }\n\n  setEventListeners() {\n    super.setEventListeners();\n    this._formElement.addEventListener(\"submit\", (evt) => {\n      evt.preventDefault();\n      this._handleFormSubmit(this._getInputValues());\n    })\n  }\n\n  open() {\n    super.open();\n  }\n\n  close() {\n    super.close();\n    this._formElement.reset();\n  }\n\n  isLoading(loading) {\n    const saveButton = this._formElement.querySelector(\".popup__save-button\")\n    if (loading) {\n        saveButton.textContent = \"Сохранение...\"\n    } else {\n        saveButton.textContent = this._saveButtonText\n    }\n}\n}\n","export default class UserInfo {\n  constructor({ userName, userAbout, userAvatar }) {\n    this._name = userName;\n    this._about = userAbout;\n    this._avatar = userAvatar\n  }\n\n  getUserInfo() {\n    return {\n      name: this._name.textContent,\n      about: this._about.textContent,\n      avatar: this._avatar.src\n    }\n  }\n\n  setUserInfo({ name, about, avatar }) {\n    if (name) {\n      this._name.textContent = name\n    }\n    if (about) {\n      this._about.textContent = about\n    }\n    if (avatar) {\n      this._avatar.src = avatar\n    }\n\n  }\n}\n","import Popup from \"./Popup.js\";\n\nexport default class PopupWithConfirm extends Popup {\n  setSubmitAction(action) {\n    this._handleCardDelSubmit = action;\n  }\n\n  setEventListeners(){\n  this._popupElement.addEventListener(\"submit\", (evt) => {\n    evt.preventDefault();\n    this._handleCardDelSubmit();\n  })\n    super.setEventListeners();\n\n  }\n}\n","import \"./index.css\"\nimport Card from \"../components/Card.js\";\nimport FormValidator from \"../components/FormValidator.js\";\nimport Section from \"../components/Section.js\";\nimport PopupWithImage from \"../components/PopupWithImage.js\";\nimport PopupWithForm from \"../components/PopupWithForm.js\";\nimport UserInfo from \"../components/UserInfo.js\";\nimport PopupWithConfirm from \"../components/PopupWithConfirm\";\nimport {\n  selectors,\n  editButton,\n  formElementAdd,\n  nameInput,\n  jobInput,\n  profileName,\n  profileJob,\n  profileAvatar,\n  addButton,\n  deleteElement,\n  //popupDeleteConfirmation,\n  profileAvatarEditButton,\n} from \"../utils/constants.js\";\nimport Api from \"../components/Api.js\";\n\nlet userId\nconst api = new Api({\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-63\",\n  headers: {\n    authorization: \"5fcf59d4-83ea-4773-9206-282bfebd1adc\",\n    'Content-Type': \"application/json\"\n  }\n});\n\n//инициализация userinfo\nconst userInfo = new UserInfo({\n  userName: profileName,\n  userAbout: profileJob,\n  userAvatar: profileAvatar\n}\n)\n\n//открытие картинки\nconst popupOpenImage = new PopupWithImage(\".popup-img\");\n\n  popupOpenImage.setEventListeners();\n\n  //api.getUserInfo()\n  //.then((userData) => {\n   // userInfo = setUserInfo(userData._id)\n  //});\n\n//попап удаления карточки\nconst removeCardConfirm = new PopupWithConfirm(\".popup_element_delete-card\");\nremoveCardConfirm.setEventListeners();\n\n\n//функция создания новых карточек, удаление и рабочий лайк\nfunction createCard(data, templateSelector) {\n  const card = new Card({\n    data: data,\n   // userInfo: getUserInfo,\n    handleCardClick: () => {\n      popupOpenImage.open(data.name, data.link);\n    },\n  handleAddLike: () => {\n    api.addLike(data._id)\n        .then(data => {\n            card.isLiked = true;\n            card.likeCounter.textContent = data.likes.length;\n            card.likeButton.classList.toggle(\"element__heart_active\")\n        })\n        .catch((err) => console.log(`Error with createCard handleAddLike` + err))\n},\n  handleDelLike: () => {\n    api.deleteLike(data._id)\n        .then(data => {\n            card.isLiked = false;\n            card.likeCounter.textContent = data.likes.length;\n            card.likeButton.classList.toggle(\"element__heart_active\")\n        })\n        .catch((err) => console.log(`Error with handleDelLike` + err))\n      },\n      handleCardDelSubmit: (card) => {\n        removeCardConfirm.open();\n        console.log(card);\n        removeCardConfirm.setSubmitAction(() => {\n          api.deleteCard(card._cardId)\n          .then(() => {\n            card.deleteCard();\n            removeCardConfirm.close();\n          });\n        })\n        //.catch((err) => console.log(`Error with createCard handleCardDelSubmit` + err))\n      },\n      currentUserId: userId\n    }, templateSelector);\n\n  const cardElement = card.generateCard();\n  return cardElement;\n    }\n//инициализируем класс, ответственный за добавление формы на страницу\nconst cardList = new Section(\n  {\n\n    renderer: (data) => cardList.addItem(createCard(data, \"#card\"))\n  },\n  \".elements\"\n);\n\n\n//добавление карточки в контейнер\nconst newCard = new PopupWithForm(\".popup-add\", {\n  handleFormSubmit: (data) => {\n\n    newCard.isLoading(true);\n    api.addCard({\n      title: data.title,\n      link: data.link\n  })\n  .then((data) => {\n    cardList.addItem(createCard(data, \"#card\"));\n\n  newCard.close();\n  formElementAdd.reset();\n})\n.catch((err) => console.log(`Error with newCard` + err))\n}\n});\nnewCard.setEventListeners();\n\n\n//обработчик события при добавлении карточки\naddButton.addEventListener(\"click\", () => {\n  formAddCardValidator.restartFormValidation();\n  newCard.open();\n});\n\n//форма редактирования профиля\nconst newProfile = new PopupWithForm(\".popup-edit\", {\n  handleFormSubmit: () => {\n    newProfile.isLoading(true);\n    api.editProfileInfo({\n      name: nameInput.value,\n      about: jobInput.value\n    })\n    .then((data) => {\n      userInfo.setUserInfo({\n          name: data.name,\n          about: data.about\n      });\n      newProfile.close();\n  })\n  .catch((err) => console.log(`Error with newProfile` + err))\n}\n});\nnewProfile.setEventListeners();\n\n\n//обработчик события при редактировании профиля\neditButton.addEventListener(\"click\", () => {\n  formEditProfileValidator.restartFormValidation();\n  const { name, about } = userInfo.getUserInfo();\n  nameInput.value = name\n  jobInput.value = about\n  newProfile.open();\n});\n\n//форма редактирования аватара\nconst popupEditAvatar = new PopupWithForm(\".popup_avatar\", {\n  handleFormSubmit: (info) => {\n      popupEditAvatar.isLoading(true);\n      api.setAvatar({\n          avatar: info.avatar\n      })\n          .then((data) => {\n              userInfo.setUserInfo({\n                  name: data.name,\n                  about: data.about,\n                  avatar: data.avatar\n              });\n              popupEditAvatar.close();\n          })\n          .catch((err) => console.log(`Error with popupEditAvatar` + err));\n  }\n});\n\n//обработчик события при редактировании аватара\nprofileAvatarEditButton.addEventListener(\"click\", () => {\n  popupEditAvatarFormValidator.restartFormValidation();\n  popupEditAvatar.open();\n});\n\npopupEditAvatar.setEventListeners();\n\n\nconst cardsData = api.getInitialCards();\nconst getUserData = api.getUserInfo();\n\nPromise.all([cardsData, getUserData])\n//.catch((err) => console.log(`Error with promises...` + err));\n    .then(([data, user]) => {\n\n        userInfo.setUserInfo({\n            name: user.name,\n            about: user.about,\n            avatar: user.avatar\n        });\n        userId = user._id;\n\n        cardList.renderItems(data);\n    });\n\n\n\n//для каждой формы включаю экземпляр валидатора и включаю валидацию.\nconst formEditProfile = document.querySelector(\".popup-edit\");\nconst formEditProfileValidator = new FormValidator(selectors, formEditProfile);\nformEditProfileValidator.enableValidation();\n\nconst formAddCard = document.querySelector(\".popup-add\");\nconst formAddCardValidator = new FormValidator(selectors, formAddCard);\nformAddCardValidator.enableValidation();\n\nconst popupEditAvatarForm = document.querySelector(\".popup_avatar\");\nconst popupEditAvatarFormValidator = new FormValidator(selectors, popupEditAvatarForm);\npopupEditAvatarFormValidator.enableValidation();\n\n","//вызов валидации\nexport const selectors = {\n  formSelector: \".popup__form\",\n  inputSelector: \".popup__input\",\n  submitButtonSelector: \".popup__save-button\",\n  inactiveButtonClass: \"popup__save-button_inactive\",\n  inputErrorClass: \"popup__input_type_error\",\n  errorClass: \"popup__input-error_active\"\n}\n\n//кнопки, формы, инпуты\nexport const editButton = document.querySelector(\".profile__edit-button\");\nexport const formElementEdit = document.querySelector(\".popup__form_profile\");\nexport const formElementAdd = document.querySelector(\".popup__form_add\");\nexport const nameInput = document.querySelector(\".popup-text-check-name\");\nexport const jobInput = document.querySelector(\".popup-text-check-job\");\nexport const profileName = document.querySelector(\".profile__name\");\nexport const profileJob = document.querySelector(\".profile__job\");\nexport const profileAvatar = document.querySelector(\".profile__avatar_img\")\nexport const addButton = document.querySelector(\".profile__add-button\");\nexport const profileAvatarEditButton = document.querySelector(\".profile__avatar\");\nexport const deleteElement = document.querySelector(\".element__delete-icon\");\nexport const popupDeleteConfirmation = document.querySelector(\".popup_element_delete-card\");\n\n","export default class Api {\n    constructor(options) {\n        this._baseUrl = options.baseUrl;\n        this._headers = options.headers;\n    }\n\n    returnResultStatus(res) {\n        if (res.ok) {\n            return res.json();\n        }\n        return Promise.reject(`Что-то пошло не так: ${res.status} : ${res.statusText}`);\n    }\n\n    getUserInfo() {\n        return fetch(this._baseUrl + '/users/me', {headers: this._headers})\n            .then(this.returnResultStatus)\n    }\n\n    getInitialCards() {\n        return fetch(this._baseUrl + '/cards', {headers: this._headers})\n            .then(this.returnResultStatus)\n    }\n\n    editProfileInfo({name, about}) {\n        return fetch(\n            this._baseUrl + '/users/me',\n            {\n                method: 'PATCH',\n                headers: this._headers,\n                body: JSON.stringify({\n                    name: name,\n                    about: about\n                })\n            }\n        )\n            .then(this.returnResultStatus)\n    }\n\n    addCard({title, link}) {\n        return fetch(\n            this._baseUrl + '/cards',\n            {\n                method: 'POST',\n                headers: this._headers,\n                body: JSON.stringify({\n                    name: title,\n                    link: link\n                })\n            }\n        )\n            .then(this.returnResultStatus)\n    }\n\n    deleteCard(cardId) {\n        console.log(cardId)\n        return fetch(\n            this._baseUrl + `/cards/${cardId}`,\n            {\n                method: 'DELETE',\n                headers: this._headers\n            })\n            .then(this.returnResultStatus)\n    }\n\n    addLike(cardId) {\n        return fetch(\n            this._baseUrl + `/cards/likes/${cardId}`,\n            {\n                method: 'PUT',\n                headers: this._headers\n            }\n        )\n            .then(this.returnResultStatus)\n    }\n\n    deleteLike(cardId) {\n        return fetch(\n            this._baseUrl + `/cards/likes/${cardId}`,\n            {\n                method: 'DELETE',\n                headers: this._headers\n            }\n        )\n            .then(this.returnResultStatus);\n    }\n\n    setAvatar({avatar}) {\n        return fetch(\n            this._baseUrl + '/users/me/avatar',\n            {\n                method: 'PATCH',\n                headers: this._headers,\n                body: JSON.stringify({\n                    avatar: avatar,\n                })\n            }\n        )\n            .then(this.returnResultStatus)\n    }\n}\n"],"names":["Card","templateSelector","data","currentUserId","handleCardClick","handleCardDelSubmit","handleAddLike","handleDelLike","_element","remove","this","_name","name","_link","link","_templateSelector","_handleCardClick","_handleCardDelSubmit","_handleAddLike","_handleDelLike","isLiked","_likes","likes","_cardId","_id","_ownerId","owner","_currentUserId","deleteCard","bind","document","querySelector","content","firstElementChild","cloneNode","_getTemplate","_cardElementImage","_cardElementTitle","likeButton","likeCounter","textContent","length","setAttribute","forEach","element","classList","add","_setEventListners","_deleteButton","addEventListener","FormValidator","selectors","formElement","_selectors","_submitButton","submitButtonSelector","_formElement","_inputList","Array","from","querySelectorAll","inputSelector","inputElement","errorMessage","errorElement","id","inputErrorClass","errorClass","validity","valid","_hideInputError","_showInputError","validationMessage","some","input","_hasInvalidInput","inactiveButtonClass","removeAttribute","_toggleButtonState","_checkInputValidity","_setEventListeners","Section","containerSelector","renderer","_renderer","_container","items","item","prepend","Popup","popupSelector","_popupSelector","_popupElement","_handleEscClose","_closePopupClickOverlay","removeEventListener","evt","key","close","e","target","currentTarget","popupCloseButton","PopupWithImage","_image","_imageText","src","alt","PopupWithForm","handleFormSubmit","_handleFormSubmit","_saveButtonText","_formValues","value","preventDefault","_getInputValues","reset","loading","UserInfo","userName","userAbout","userAvatar","_about","_avatar","about","avatar","userId","PopupWithConfirm","action","formSelector","editButton","formElementAdd","nameInput","jobInput","profileName","profileJob","profileAvatar","addButton","profileAvatarEditButton","api","options","_baseUrl","baseUrl","_headers","headers","res","ok","json","Promise","reject","status","statusText","fetch","then","returnResultStatus","method","body","JSON","stringify","title","cardId","console","log","authorization","userInfo","popupOpenImage","setEventListeners","removeCardConfirm","createCard","card","open","addLike","toggle","catch","err","deleteLike","setSubmitAction","generateCard","cardList","addItem","newCard","isLoading","addCard","formAddCardValidator","restartFormValidation","newProfile","editProfileInfo","setUserInfo","formEditProfileValidator","getUserInfo","popupEditAvatar","info","setAvatar","popupEditAvatarFormValidator","cardsData","getInitialCards","getUserData","all","user","renderItems","enableValidation"],"sourceRoot":""}